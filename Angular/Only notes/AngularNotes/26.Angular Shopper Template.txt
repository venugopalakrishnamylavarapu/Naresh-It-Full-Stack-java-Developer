www.fakestoreapi.com
                            [Data for ERP application]

Request                                    Data
GET     /products                        It returns an [] of products.
GET    /products/1                        It returns specific product by id { }
GET    /products/categories            It returns all categories string[ ]
GET /products/category/jewelery It returns specific category products[]


shopper-template.component.ts

import { Component, OnInit } from '@angular/core';
import { FakestoreProductContract } from '../../contracts/FakestoreProductContract';

@Component({
  selector: 'app-shopper-template',
  templateUrl: './shopper-template.component.html',
  styleUrls: ['./shopper-template.component.css']
})
export class ShopperTemplateComponent implements OnInit {
  constructor(){}

  public Categories:string[] = [];
  public Products:FakestoreProductContract[] = [];
  public CartItems:FakestoreProductContract[]= [];
  public CartItemsCount:number = 0;
  public isCartVisible:boolean =false;

  public LoadCategories():void {
      fetch('http://fakestoreapi.com/products/categories&#39;)
      .then(response=> response.json())
      .then(data=> {
        data.unshift("all");
        this.Categories = data;
      })
  }
  public LoadProducts(url:string):void {
      fetch(url)
      .then(response => response.json())
      .then(data=>{
         this.Products = data;
      })
  }
  public GetCartItemsCount():void {
      this.CartItemsCount = this.CartItems.length;
  }

  ngOnInit(): void {
    this.LoadCategories();
    this.LoadProducts(`http://fakestoreapi.com/products`);
    this.GetCartItemsCount();
  }
  public CategoryChanged(categoryName:string):void {
      if(categoryName=="all"){
        this.LoadProducts(`http://fakestoreapi.com/products`);
      } else {
        this.LoadProducts(`http://fakestoreapi.com/products/category/${categoryName}`);
      }
  }

  public AddToCartClick(id:number):void {
       fetch(`http://fakestoreapi.com/products/${id}`)
       .then(response => response.json())
       .then(data=>{
           this.CartItems.push(data);
           this.GetCartItemsCount();
           alert(`${data.title} \nAdded to Cart`);
       })
  }
  public ToggleCart():void {
      this.isCartVisible = (this.isCartVisible==false)?true:false;
  }
  public RemoveClick(index:number):void {
      var flag = confirm('Are you sure want to delete?');
      if(flag==true) {
        this.CartItems.splice(index,1);
        this.GetCartItemsCount();
      }
  }

}

shopper-template.component.html

<div class="container-fluid">
    <header class="d-flex  p-2  justify-content-between">
        <div><h2>Shopper.</h2></div>
        <nav>
            <button (click)="CategoryChanged('all')" class="btn">Home</button>
            <button (click)="CategoryChanged('electronics')" class="btn">Electronics</button>
            <button class="btn">Men's Fashion</button>
            <button class="btn">Women's Fashion</button>
            <button (click)="CategoryChanged('jewelery')" class="btn">Jewelery</button>
        </nav>
        <div>
            <button class="btn"><span class="bi bi-search"></span></button>
            <button class="btn"> <span class="bi bi-heart"></span></button>
            <button class="btn"><span class="bi bi-person"></span></button>
            <button (click)="ToggleCart()" class="btn position-relative"><span class="bi bi-cart"></span> <span class="badge rounded rounded-circle bg-danger text-white position-absolute">{{CartItemsCount}}</span> </button>
        </div>
    </header>
    <div class="bg-dark text-white text-center p-2 mt-2">
        ⚡️ HAPPY HOLIDAY DEALS ON EVERYTHING ⚡️
    </div>
    <section class="mt-3 row">
        <nav class="col-3">
          <div>
            <label class="form-label"><b>Select Category</b></label>
            <div>
                <select (change)="CategoryChanged(category.value)" ngModel #category="ngModel" class="form-select">
                    <option *ngFor="let item of Categories" [value]="item">
                        {{item | uppercase}}
                    </option>
                </select>
            </div>
          </div>
          <div class="mt-2" *ngIf="isCartVisible">
            <h4>Your Cart</h4>
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Preview</th>
                    </tr>
                </thead>
                <tbody>
                    <tr *ngFor="let item of CartItems; let i = index">
                        <td>{{item.title}}</td>
                        <td>
                            <img [src]="item.image" width="50" height="50">
                        </td>
                        <td>
                            <button (click)="RemoveClick(i)" class="btn btn-danger">
                                <span class="bi bi-trash-fill"></span>
                            </button>
                        </td>
                    </tr>
                </tbody>
            </table>
          </div>
        </nav>
        <main class="col-9 d-flex flex-wrap overflow-auto" style="height: 450px;">
            <div *ngFor="let product of Products" class="card p-2 m-2" style="width: 200px;">
                <img [src]="product.image" class="card-img-top" height="160">
                <div class="card-header" style="height:140px">
                    <p>{{product.title}}</p>
                </div>
                <div class="card-body">
                    <dl>
                        <dt>Price</dt>
                        <dd>{{product.price}}</dd>
                        <dt>Rating</dt>
                        <dd>
                            <span class="bi bi-star-fill text-success"></span> {{product.rating.rate}} [{{product.rating.count}}]
                        </dd>
                    </dl>
                </div>
                <div class="card-footer">
                    <button (click)="AddToCartClick(product.id)" class="btn btn-danger w-100">
                        <span class="bi bi-cart4"></span> Add to Cart
                    </button>
                </div>
            </div>
        </main>
    </section>
</div>