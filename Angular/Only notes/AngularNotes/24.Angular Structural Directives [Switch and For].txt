Structural Directives
- NgIf  then  else => Content Projection
            TemplateRef<>
            @ViewChild()
- NgSwitch


                                NgSwitch
- Switch is a selector that selects exactly the template that matches your condition and renders into UI.

Syntax:
        <div  [ngSwitch]="value | expression">
                <div *ngSwitchCase=" 'case1' "> </div>
                <div *ngSwitchCase=" 'case2' "> </div>
                <div *ngSwitchDefault>  </div>
        </div>

Ex:
product-details.component.ts

import { Component } from '@angular/core';

@Component({
  selector: 'app-product-details',
  templateUrl: './product-details.component.html',
  styleUrls: ['./product-details.component.css']
})
export class ProductDetailsComponent {
      public ViewName:string = 'BasicDetails';

      public ViewClick(viewname:string){
         this.ViewName = viewname;
      }
}


product-details.component.html

<div class="container-fluid">
    <div class="row mt-4">
        <div class="col-2">
            <div class="btn-group-vertical">
                <button (click)="ViewClick('BasicDetails')" class="btn btn-primary w-100 mb-2">Basic Details</button>
                <button (click)="ViewClick('Preview')" class="btn btn-primary w-100 mb-2">Preview</button>
                <button (click)="ViewClick('Offers')" class="btn btn-primary w-100">Offers</button>
            </div>
            <div class="mt-4">
                <select [(ngModel)]="ViewName" class="form-select">
                    <option value="Info">Select Info</option>
                    <option value="BasicDetails">Basic Details</option>
                    <option value="Preview">Preview</option>
                    <option value="Offers">Offers</option>
                </select>
            </div>
        </div>
        <div class="col-10">
             <div [ngSwitch]="ViewName">
                 <div *ngSwitchCase="'BasicDetails'">
                    <h4>realme C30 (Lake Blue, 32 GB)  (2 GB RAM)</h4>
                    <span class="bg-success text-white p-2 rounded rounded-2"><span class="bi bi-star-fill text-white"></span> 4.3 </span> <span style="color:gray" class="ms-4">75,240 Ratings & 4,006 Reviews</span>
                    <div class="mt-3">
                        <h2>₹5,999</h2>
                    </div>
                 </div>

                 <div *ngSwitchCase="'Preview'">
                    <img src="assets/view1.jpg" width="300" height="400">
                 </div>

                 <div *ngSwitchCase="'Offers'">
                    <h3>Available Offers</h3>
                    <ul class="list-unstyled">
                        <li class="bi bi-tag-fill text-success"> Bank Offer5% Cashback on Flipkart Axis Bank CardT&C </li>
                        <li class="bi bi-tag-fill text-success"> Special PriceGet extra ₹2500 off (price inclusive of cashback/coupon)T&C</li>
                        <li class="bi bi-tag-fill text-success">Partner OfferSign up for Flipkart Pay Later and get Flipkart Gift Card worth up to ₹750*</li>
                        <li class="bi bi-tag-fill text-success">Partner OfferPurchase now & get a surprise cashback coupon in February / March 2023</li>
                    </ul>
                 </div>
                 <div *ngSwitchDefault>
                     <h4>Please select a View</h4>
                 </div>
             </div>
        </div>
    </div>
</div>

                                  NgFor
- It is a structural directive used to repeat HTML elements.
- It is a repeater.
- It uses an iteration pattern to read every element form a collection and repeat markup for every element.

        for..in            : To read all properties
        for..of            : To read all values

- NgFor uses "of" operator.

Syntax:
            <li  *ngFor="var item of collection">

Ex:
 for-demo.component.ts

    import { Component } from '@angular/core';

@Component({
  selector: 'app-for-demo',
  templateUrl: './for-demo.component.html',
  styleUrls: ['./for-demo.component.css']
})
export class ForDemoComponent {
     public Categories:string[] = ["All", "Electronics", "Footwear", "Fashion"];
}


for-demo.component.html

<div class="container-fluid">
  <div class="mt-4 row">
    <div class="col">
        <ol>
            <li *ngFor="let item of Categories">{{item}}</li>
        </ol>
    </div>
    <div class="col">
        <select>
            <option *ngFor="let item of Categories">{{item}}</option>
        </select>
    </div>
    <div class="col">
        <ul class="list-unstyled">
            <li *ngFor="let item of Categories"><input type="checkbox">{{item}}</li>
        </ul>
    </div>
    <div class="col">
        <div class="btn-group-vertical">
            <button class="btn btn-primary mb-2" *ngFor="let item of Categories">
                {{item}}
            </button>
        </div>
    </div>
    <div class="col">
        <div *ngFor="let item of Categories">
            <a href="#">{{item}}</a>
        </div>
    </div>
    <div class="col">
        <table class="table table-hover table-dark">
            <thead>
                <tr>
                    <th>Categories</th>
                </tr>
            </thead>
            <tbody>
                <tr *ngFor="let item of Categories">
                    <td>{{item}}</td>
                </tr>
            </tbody>
        </table>
    </div>
  </div>
</div>

Ex:
for-demo.component.ts

import { Component } from '@angular/core';

@Component({
  selector: 'app-for-demo',
  templateUrl: './for-demo.component.html',
  styleUrls: ['./for-demo.component.css']
})
export class ForDemoComponent {
    public Menu:{Category:string, Products:string[]}[] = [
       {
         Category: "Electronics",
         Products: ["Televisions", "Mobiles"]
       },
       {
         Category: "Footwear",
         Products: ["Sneakers", "Boots", "Casuals"]
       }
    ];
    public Products:{Name:string, Price:number}[] = [
        {Name: "Samsung TV", Price: 45000.44},
        {Name: "Mobile", Price: 20000.44},
        {Name: "Nike Casuals", Price: 5300.34}
    ];
}


for-demo.component.html

<div class="container-fluid">
  <div class="mt-4">
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Name</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            <tr *ngFor="let item of Products">
                 <td>{{item.Name}}</td>
                 <td>{{item.Price}}</td>
            </tr>
        </tbody>
    </table>
  </div>
  <div class="mt-4 row">
     <div class="col">
        <ol>
            <li *ngFor="let item of Menu">
                {{item.Category}}
                <ul>
                    <li *ngFor="let product of item.Products">
                        {{product}}
                    </li>
                </ul>
            </li>
        </ol>
     </div>
     <div class="col">
          <select>
              <optgroup *ngFor="let item of Menu" [label]="item.Category">
                  <option *ngFor="let product of item.Products">
                        {{product}}
                  </option>
              </optgroup>
          </select>
     </div>
     <div class="col">
         <details *ngFor="let item of Menu">
                <summary>{{item.Category}}</summary>
                <ul>
                    <li *ngFor="let product of item.Products">
                        {{product}}
                    </li>
                </ul>
         </details>
     </div>
  </div>
</div>