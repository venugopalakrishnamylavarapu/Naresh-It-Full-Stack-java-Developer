SYNONYMS:
===========
	- IT IS A DB OBJECT WHICH IS USED TO CREATE PERMANENT ALIAS NAMES
FOR TBALE / DB OBJECT.

PURPOSE OF SYNONYMS:
=======================
	1. TO REDUCE LENGTHY TABLE NAME.
		EX: 
		COLLEGE_ENROLLMENT_DETAILS(TABLE NAME)

		SQL> INSERT INTO COLLEGE_ENROLLMENT_DETAILS VALUES(......);
		SQL> UPDATE COLLEGE_ENROLLMENT_DETAILS SET ..................;
		SQL> DELETE FROM COLLEGE_ENROLLMENT_DETAILS............;
		SQL> SELECT * FROM COLLEGE_ENROLLMENT_DETAILS;

		SOLUTION:
		==========
		CREATE SYNONYM S1 FOR COLLEGE_ENROLLMENT_DETAILS;

		SQL> INSERT INTO S1 VALUES(......);
		SQL> UPDATE S1 SET ..................;
		SQL> DELETE FROM S1............;
		SQL> SELECT * FROM S1;
		
	2. TO HIDE OWNERNAME AND TBALE OBJECT NAME(SECURITY)
		EX:
		SQL> CONN SYSTEM/TIGER
		SQL> GRANT SELECT ON DEPT TO U1;
		
		SQL> CONN U1/U1
		SQL> SELECT * FROM SYSTEM.DEPT;
			OWNER NAME : SYSTEM
			TABLE NAME : DEPT
		SOLUTION:
		=========
		SQL> CONN SYSTEM/TIGER
		SQL> CREATE SYNONYM S2 FOR SYSTEM.DEPT;
		SQL> GRANT SELECT ON S2  TO U1;

		SQL> CONN U1/U1
		SQL> SELECT * FROM S2;

TYPES OF SYNONYMS:
====================
	1. PRIVATE SYNONYMS
	2. PUBLIC SYNONYMS

1. PRIVATE SYNONYMS:
=====================
	- THESE ARE CREATED BY USERS WHO ARE HAVING PERMISSION.

SYNTAX:
=======
CREATE SYNONYM <SYNONYM NAME> FOR [OWNER NAME].<TABLE NAME>;

EX:
SQL> CONN SYSTEM/TIGER
SQL> CREATE USER U22 IDENTIFIED BY U22;
SQL> GRANT CONNECT,CREATE TABLE,UNLIMITED TABLESPACE TO U22;

SQL> CONN U22/U22
SQL> CREATE TABLE COLLEGE_ENROLLMENT_DETAILS(STID INT,SNAME VARCHAR2(10),
BNAME VARCHAR2(10));

SQL> INSERT INTO COLLEGE_ENROLLMENT_DETAILS VALUES(1,'SMITH','CSE');
SQL> UPDATE COLLEGE_ENROLLMENT_DETAILS SET STID=1021 WHERE STID=1;
SQL> DELETE FROM COLLEGE_ENROLLMENT_DETAILS WHERE STID=1021;

SQL> CREATE SYNONYM S1 FOR COLLEGE_ENROLLMENT_DETAILS;
ERROR at line 1:
ORA-01031: insufficient privileges

SQL> CONN SYSTEM/TIGER
SQL> GRANT CREATE SYNONYM TO U22;

SQL> CONN U22/U22
SQL> CREATE SYNONYM S1 FOR COLLEGE_ENROLLMENT_DETAILS;----ALLOWED

SQL> SELECT * FROM S1;
SQL> INSERT INTO S1 VALUES(1,'SMITH','CSE');
SQL> UPDATE S1 SET STID=101 WHERE STID=1;
SQL> DELETE FROM S1 WHERE STID=101;

NOTE:
======
	- TO VIEW PRIVATE SYNONYMS ALONG WITH TABLE NAME,OWNER OF THE 
TABLE THEN WE USE A DATADICTIONARY IS "USER_SYONYMS".

EX:
SQL> DESC USER_SYNONYMS;
SQL> SELECT TABLE_OWNER,TABLE_NAME,SYNONYM_NAME
  2  FROM USER_SYNONYMS;

TABLE_OWNER	TABLE_NAME			SYNONYM_NAME
----------------------------	------------------------------			----------------------
U22		COLLEGE_ENROLLMENT_DETAILS	S1

HOW TO DROP A PRIVATE SYNONYM:
================================
SYNTAX:
=======
DROP SYNONYM <SYNONYM NAME>;

EX:
DROP SYONYM S1;

2. PUBLIC SYNONYMS:
====================
	- THESE ARE CREATED BY DBA ONLY.
	- TO HIDE OWNER NAME AND TABLE NAME FROM USERS.

SYNTAX:
=======
CREATE PUBLIC SYONYM <SYNONYM NAME> FOR [OWNER NAME].<TABLE NAME>;

EX:
SQL> CONN SYSTEM/TIGER
SQL> CREATE USER U33 IDENTIFIED BY U33;
SQL> CREATE USER U44 IDENTIFIED BY U44;
SQL> GRANT CONNECT TO U33,U44;
SQL> CREATE PUBLIC SYNONYM PS1 FOR SYSTEM.DEPT;
SQL> GRANT SELECT ON PS1 TO U33,U44;

SQL> CONN U33/U33
SQL> SELECT * FROM PS1;-----ALLOWED

SQL> CONN U44/U44
SQL> SELECT * FROM PS1;------ALLOWED

NOTE:
=====
	- TO VIEW PUBLIC SYNONYMS IN ORACLE DB THEN WE USE A DATADICTIONARY
IS CALLED AS "ALL_SYNONYMS".

EX:
SQL> DESC ALL_SYONYMS;
SQL> SELECT TABLE_OWNER,TABLE_NAME,SYNONYM_NAME FROM
          ALL_SYNONYMS WHERE TABLE_NAME='DEPT';

TABLE_OWNER		TABLE_NAME		SYNONYM_NAME
--------------------------------	-----------------------		-------------------------
SYSTEM			DEPT			PS1

HOW TO DROP A PUBLIC SYNONYM:
================================
SYNTAX:
========
DROP PUBLIC SYONYM <SYNONYM NAME>;

EX:
SQL> DROP PUBLIC SYNONYM PS1;
=============================================================================
VIEWS:
======
	- IT IS A VIRTUAL OBJECT WHICH WILL CREATE BASED ON BASE TABLE(MAIN TABLE). VIEW DOES NOT  STORE DATA / INFORMATION.IT CAN ACCESS THE REQUIRED DATA
(OR) INFORMATION FROM BASE TABLE.

PURPOSE VIEWS:
===============
1. SECURITY:
	> COLUMN LEVEL SECURITY
	> ROW LEVEL SECURITY
























































