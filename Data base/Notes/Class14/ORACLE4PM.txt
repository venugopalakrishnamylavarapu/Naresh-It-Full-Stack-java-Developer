CLAUSES:
=========
	- CLAUSE IS A STATEMENT WHICH WILL PROVIDE SOME FACILITIES LIKE
"FILTERING ROWS,SORTING VALUES,GROUPING SIMILAR DATA,FINDING SUB TOTAL AND GRAND TOTAL "BASED ON COLUMNS AUTOMATICALLY.
		> WHERE
		> ORDER BY
		> GROUP BY
		> HAVING
		> ROLLUP
		> CUBE

WHERE:
========
	- FILTERING ROWS BEFORE GROUPING DATA IN A TABLE.
	- CAN WORK ON "SELECT,UPDATE,DELETE" COMMANDS ONLY.

SYNTAX:
=======
	WHERE <FILTERING CONDITION>;

EX:
SELECT * FROM EMP WHERE EMPNO=7788;
UPDATE EMP SET SAL=56000 WHERE DEPTNO=20;
DELETE FROM EMP WHERE JOB='CLERK';

ORDER BY:
=========
	- TO ARRANGE A SPECIFIC COLUMN VALUES IN ASCENDING OR DESCENDING
ORDER.
	- BY DEFAULT ORDER BY CAN ARRANGE VALUES IN "ASCENDING" ORDER.IF WE
WANT TO ARRANGE IN DESCENDING ORDER THEN WE "DESC" KEYWORD.

SYNTAX:
========
SELECT * FROM <TN> ORDER BY <COLUMN NAME1> <ASC/DESC>,<COLUMN NAME2> <ASC/DESC>,............................................;

EX:
SQL> SELECT * FROM EMP ORDER BY SAL;
SQL> SELECT SAL FROM EMP ORDER BY SAL DESC;
SQL> SELECT ENAME FROM EMP ORDER BY ENAME;
SQL> SELECT HIREDATE FROM EMP ORDER BY HIREDATE DESC;

EX:
WAQ TO DISPLAY EMPLOYEES WHO ARE WORKING UNDER DEPTNO IS 30 AND ARRANGE 
THOSE EMPLOYEES SALARIES IN DESCENDING ORDER?
SQL> SELECT * FROM EMP WHERE DEPTNO=30 ORDER BY SAL DESC;

EX:
WAQ TO DISPLAY EMPLOYEES DEPTNO'S IN ASCENDING ORDER AND THEIR SALARIES
IN DESCENDING ORDER FROM EACH DEPTNO WISE?
SQL> SELECT * FROM EMP ORDER BY DEPTNO,SAL DESC;

NOTE:
=====
	- ORDER BY CLAUSE CAN APPLY ON NOT ONLY COLUMN NAMES EVEN THOUGH 
IT CAN APPLY ON THE POSITION OF COLUMN IN SELECT QUERY.

EX:
SQL> SELECT * FROM EMP ORDER BY SAL DESC;
SQL> SELECT * FROM EMP ORDER BY 6 DESC;
SQL> SELECT EMPNO,ENAME,SAL FROM EMP ORDER BY 3 DESC;
SQL> SELECT ENAME,SAL FROM EMP ORDER BY 2;
SQL> SELECT SAL FROM EMP ORDER BY 1;

ORDER BY  WITH "NULL CLAUSES":
==============================
	1. NULLS FIRST:
	===============
		- BY DEFAULT ORDER BY ON ASCENDING ORDER,
			FIRST : VALUES 
			LATER : NULLS
	EX:
	SQL> SELECT * FROM EMP ORDER BY COMM;

	TO OVERVCOME THIS WE USE "NULLS FIRST" CLAUSE,
			FRIST : NULLS
			LATER : VALUES
	EX:
	SQL> SELECT * FROM EMP ORDER BY COMM NULLS FIRST;

	2. NULLS LAST:
	=============
		- BY DEFAULT ORDER BY ON DESCENDING ORDER,
			FIRST : NULLS
			LATER : VALUES
	EX:
	SQL> SELECT * FROM EMP ORDER BY COMM DESC;

	TO OVERVCOME THIS WE USE "NULLS LAST" CLAUSE,
			FRIST : VALUES
			LATER : NULLS
	EX:
	SQL> SELECT * FROM EMP ORDER BY COMM DESC NULLS LAST;

GROUP BY:
=========	
	- IS USED TO MAKE GROUPS BASED ON A COLUMNS.
	- WHEN WE USE GROUP BY WE SHOULD USE "GROUPING/AGGREGATIVE"
	FUNCTIONS ARE "SUM(),AVG(),MIN(),MAX(),COUNT()".

	EX: TO FIND OUT NO.OF FEMALES & MALES ?

			GROUP BY
			       |
	COUNT(*):	GENDER
			       |
		FEMALE		MALE
		FEMALE		MALE
		FEMALE		MALE	
				MALE
		========		======
		      3		  4
		========		=======

SYNTAX:
========
SELECT <COLUMN NAME1>,...................,<AGGREGATIVE FUNCTION NAME1>,...............
FROM <TABLE NAME> GROUP BY <COLUMN NAME1>,<COLUMN NAME2>,....................;

TABLE:
SQL> SELECT * FROM EMPLOYEE;

ENAME      GENDER
---------- 	 ---------
SMITH      M
ALLEN      F
WARD       F
JONES     M
SCOTT     M

EX:
WAQ TO FIND OUT NO.OF MALE AND FEMALE EMPLOYEES?
SQL> SELECT GENDER,COUNT(*) FROM EMPLOYEE GROUP BY GENDER;
			(OR)
SQL> SELECT GENDER,COUNT(GENDER) FROM EMPLOYEE GROUP BY GENDER;

GENDER		 COUNT(GENDER)
-------------		 -------------
M             		3
F             		2







		




























































