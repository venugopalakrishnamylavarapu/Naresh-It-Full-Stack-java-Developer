JavaScript Looping Statements:
Different Kinds of Loops
JavaScript supports different kinds of loops:
1 for - loops through a block of code a number of times
2 while - loops through a block of code while a specified condition is true
3 do/while - also loops through a block of code while a specified condition is true
4 for/in - loops through the properties of an object
5 for/of - loops through the values of an iterable object
6 forEach() method calls a function once for each element in an array.


for Loop
A for loop enables a particular set of conditions to be executed repeatedly until a condition is satisfied.

Syntax:
for (initialization; test condition; iteration statement)
{
     Statement(s) to be executed if test condition is true
     Statement(s) to be executed if test condition is true
}
 
Example:
<!doctype html>
<body>
<script type="text/javascript">
for (i=1;i<=5;i++)
{
document.write("The number is " + i);
document.write("<br />");
}
</script>
</body>

Example:
<!doctype html>
<body>
<script type="text/javascript">
for (i = 1; i <= 6; i++)
{
document.write("<h" + i + ">This is heading ");
document.write("</h" + i + ">");
}
</script>
</body>

JavaScript While Loop 
There are two key parts to a JavaScript while loop:
1.The conditional statement which must be True for the while loop's code to be executed.
2.The while loop's code that is contained in curly braces "{ and }" will be executed if the condition is True.

Syntax
while (variable<=endvalue)
  {
  code to be executed
  code to be executed
  }

Example1
<!doctype html>
<body>
<script type="text/javascript">
var i=1;
while (i<=5)
{
document.write("The number is " + i);
document.write("<br />");
i++;
}
</script>
</body>

Example:
<!doctype html>
<head>
<script>
counter=0
while (counter < 5)
{
document.write("Counter: " + counter + "<br />")
++counter
}
</script>
</head>

do...while Loops
When you require a loop to iterate at least once before any tests are made, use a
do...while loop, which is similar to a while loop, except that the test expression is
checked only after each iteration of the loop.

Syntax
do
  {
  code to be executed
  code to be executed
  }
while (variable<=endvalue);

Example:
<!doctype html>
<head>
<script type="text/javascript">
var i = 1;
do
{
document.write("The number is " + i);
document.write("<br />");
i++;
}
while (i <= 10);
</script>
</head>

Example:
<!doctype html>
<head>
<script>
count = 1
do
{
document.write(count + " times 7 is " + count * 7 + "<br />")
} 
while (++count <= 7)
</script>
</head>

JavaScript Break and Continue Statements
The break Statement
The break statement will break the loop and continue executing the code that follows after the loop (if any).

Example:
<!doctype html>
<body>
<script type="text/javascript">
var i=0;
for (i=0;i<=10;i++)
  {
  if (i==3)
    {
    break;
    }
  document.write("The number is " + i);
  document.write("<br />");
  }
</script>
</body>

The continue Statement
The continue statement will break the current loop and continue with the next value.

Example:
<!doctype html>
<body>
<script type="text/javascript">
var i=0;
for (i=0;i<=10;i++)
  {
  if (i==3)
    {
continue;
    }
  document.write("The number is " + i);
  document.write("<br />");
  }
</script>
</body>
