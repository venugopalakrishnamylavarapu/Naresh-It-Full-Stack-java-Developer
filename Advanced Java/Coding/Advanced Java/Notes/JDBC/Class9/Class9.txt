java.sql.Connection

Methods:
public abstract Statement createStatement() throws SQLException;

public abstract PreparedStatement prepareStatement(String) throws SQLException;

public abstract CallableStatement prepareCall(String) throws SQLException;


Note:
All jdbc interfaces are implemented in jdbc driver software by driver vendor.



Statement interface:
===================
it is used to execute static sql queries.

PreparedStatement interface:
===========================
it is used to execute dynamic sql queries.

CallableStatement interface:
===========================
it is used to execute PL/SQL programs. 

===============================================================================================


java.sql.Statement

Methods:
public abstract boolean execute(String) throws SQLException;

public abstract int executeUpdate(String) throws SQLException;

public abstract ResultSet executeQuery(String) throws SQLException;


execute() ,method:
==================
it is suitable to exceute DDL queries.
DDL stands for Data Definition Language.

Example:-  CREATE,ALTER,DROP,..ETC

exceuteUpdate() method:
======================
it is suitable to execute DML queries.
DML stands for DataManipulation Language.

Example:- INSERT,UPDATE,DELETE..etc.,

executeQuery() method:
=====================
it is suitable to exceute DQL queries.
DQL stands for Data Query Language.

Example:-  SELECT

//Program to create a table
import java.sql.*;

class Demo
{
	public static void main(String[] args)
	{
		try{
			Class.forName("oracle.jdbc.driver.OracleDriver");
			Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:SYSTEM","system","tiger");
			Statement stmt=con.createStatement();
			stmt.execute("create table tested1(sno int,name varchar2(15),marks number(3))");
			System.out.println("Table Created Succesfully")
		}
		catch(Exception e)
		{
			System.err.println(e);
		}
	}

}















































































