package com.prac;

import java.util.Arrays;
import java.util.Scanner;

public class AssosiateSol {
	/*
	 * static Scanner sc=new Scanner(System.in); public static Assosiate[]
	 * associatesForGivenTechnology(Assosiate[] ass,String searchTechnology) {
	 * 
	 * Assosiate[] result=new Assosiate[ass.length-1]; int resultcount=0; for (int i
	 * = 0; i <ass.length; i++) { if(ass[i].getTechnology().equals(searchTechnology)
	 * && ass[i].getId()%5==0) { result[resultcount]=ass[i]; resultcount++; } }
	 * result=Arrays.copyOf(result,resultcount); return result;
	 * 
	 * Assosiate[] refined = new Assosiate[0]; for(int i=0;i<ass.length;i++) {
	 * if(ass[i].getTechnology().equals(searchTechnology) &&
	 * ass[i].getExpInYears()%5==0){
	 * refined=Arrays.copyOf(refined,refined.length+1); refined[refined.length-1] =
	 * ass[i]; } } return refined; } public static void main(String[] args) {
	 * Assosiate[] arr=new Assosiate[5]; for(int i=0;i<arr.length;i++) arr[i]=new
	 * Assosiate(sc.nextInt(),sc.next(),sc.next(),sc.nextInt()); String
	 * str=sc.nextLine(); sc.close(); Assosiate[]
	 * result=associatesForGivenTechnology(arr, str); for(int
	 * i=0;i<result.length;i++) System.out.println(result[i].getId()); }
	 */
	public class Solution {
	    public static void main(String[] args) {
	        Associate[] associates = new Associate[5];
	        Scanner sc = new Scanner(System.in);
	        for(int i = 0;i < 5;i++) {
	            associates[i] = new Associate(sc.nextInt(), sc.next(), sc.next(), sc.nextInt());
	        }
	        String searchTechnology = sc.next();
	        sc.close();
	        Associate[] result= associatesForGivenTechnology(associates,searchTechnology);
	        for(int i=0;i<result.length;i++)
	            System.out.println(result[i].getId());
	    }

	    public static Associate[] associatesForGivenTechnology(Associate[] associates, String searchTechnology) {
	        Associate[] refined = new Associate[0];
	        for(int i=0;i<associates.length;i++) {
	            if(associates[i].getTechnology().equals(searchTechnology) && associates[i].getExperienceInYears()%5==0){
	                refined=Arrays.copyOf(refined,refined.length+1);
	                refined[refined.length-1] = associates[i];
	            }
	        }
	        return refined;
	    }
	}

}
